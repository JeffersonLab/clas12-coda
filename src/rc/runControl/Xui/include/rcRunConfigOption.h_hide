//-----------------------------------------------------------------------------
// Copyright (c) 1994,1995 Southeastern Universities Research Association,
//                         Continuous Electron Beam Accelerator Facility
//
// This software was developed under a United States Government license
// described in the NOTICE file included as part of this distribution.
//
// CEBAF Data Acquisition Group, 12000 Jefferson Ave., Newport News, VA 23606
//       coda@cebaf.gov  Tel: (804) 249-7030     Fax: (804) 249-5800
//-----------------------------------------------------------------------------
//
// Description:
//      RunControl RunConfig Option Menu
//
// Sergey: copied from rcRunTypeOption.h and modified
//

#ifndef _RC_RUN_CONFIG_OPTION_H
#define _RC_RUN_CONFIG_OPTION_H

#include <XcodaSimpleOptionMenu.h>
#include <rcClientHandler.h>
#include <rcXuiConsts.h>

class rcRunConfigDialog;

class rcRunConfigOption: public XcodaSimpleOptionMenu
{
public:
  // constructor and destructor
  rcRunConfigOption (Widget parent,
		   char* name, char* title,
		   rcClientHandler& handler,
		   rcRunConfigDialog* rdialog);
  virtual ~rcRunConfigOption (void);

  // function of start/end monitoring runconfig
  void startMonitoringRunConfigs (void);
  void endMonitoringRunConfigs   (void);

  // return current selection of runconfig
  char* currentRunConfig (void);

  // set up all menu entries 
  void  setAllEntries  (void);

  // class name
  virtual const char* className (void) const {return "rcRunConfigOption";}

protected:
  // monitor on and off callback
  static void runConfigsCallback (int status, void* arg, daqNetData* data);
#if defined (_CODA_2_0_T) || defined (_CODA_2_0)
  static void rtStatusCallback (int status, void* arg, daqNetData* data);
#endif
  static void offCallback      (int status, void* arg, daqNetData* data);
  
private:
  // network handler
  rcClientHandler& netHandler_;
  // parent run config dialog
  rcRunConfigDialog* dialog_;
  // all runconfigs: potential danger: not exceeding 100 runconfigs
  char*            runconfigs_[RCXUI_MAX_RUNCONFIGS];
  // current run config selection
  char*            currRunConfig_;
  int              numRunconfigs_;
};
#endif

