#!/bin/csh -f


set ch       = " "
set rocs     = ""
set crates   = ""
set vme      = "_crate"
set hostname = `hostname -s`
set NN=0
set flag = 0


#*** print help message if -h or -help specified ***
if ($#argv == 0 ) then
     set flag = 1
endif
if ($flag == 0 ) then
   if (($argv[1] == "-h")   || ($argv[1] == "-help") || \
       ($argv[1] == "help") || ($argv[1] == "--help")) then
     set flag = 2
   endif
endif
if ($flag != 0 ) then
     echo ""
     echo "  Usage: roc_reboot ROC_name [or ROCs_list]"
     echo "  -----------------------------------------"
     echo "  List of possible ROC names:"
     echo "    tdctof1 - tdctof6  tdcecal1 - tdcecal6  tdcpcal1 - tdcpcal6"
     echo "    adctof1 - adctof6  adcecal1 - adcecal6  adcpcal1 - adcpcal6"
     echo "  --------------------------------------------"
     echo "  ROCs_list could be any string with ROC names"
     echo "    with commas: tdctof1, adcecal1, .. , tdcpcal6"
     echo "    with dashes: adctof1 - adctof6, tdcpcal1 - tdcpcal6"
     echo "    and mixture: adctof1 - adctof6  tdctof6, , adcecal6, tdcpcal1 - tdcpcal6"
     echo ""
     exit(0)
endif



#*** remove extra spaces and commas from input string ***
set spstr = `echo $argv  | perl -ple 's/\s+-\s+/-/g' | perl -ple 's/-\s+/-/g' | perl -ple 's/\s+-/-/g' | perl -ple 's/,/ /g' | perl -ple 's/\s+/ /g' `
#echo "spstr >$spstr<"; echo "N_spstr = $#spstr   spstr[1]=$spstr[1]"


foreach pre_roc ($spstr)
#  echo ".... top_of_foreach:  pre_roc  >$pre_roc<"


#*** check if dash exist, and get number of words separated by dash ***
   set rr = `echo $pre_roc | grep -- '-' | awk -F- '{print $1" "$2" "$3" "$4 }' | wc | awk '{print $2}'`
#  echo "rr = $rr"


# if no dash, then check existance of roc name $pre_roc
   if ( $rr == 0 ) then

     set ns_rr = `nslookup $pre_roc | grep -i "can't"`
     if ( $#ns_rr > 0 ) then
       echo ""
       echo " Wrong roc name : $pre_roc"
       echo ""
       exit (1)
     endif
     @ NN++
     set rocs = `echo "$rocs$ch$pre_roc" `
     set crates = `echo "$crates$ch$pre_roc$vme" `
#   echo "rocs    >$rocs<";   echo "rocs[$NN]  >$rocs[$NN]<"
#   echo "crates  >$crates<"; echo "crates[$NN]  >$crates[$NN]<"


#*** if dash found, then check existance of roc list in $pre_roc ***
   else if ( $rr == 2 ) then

     set roc_n = `echo $pre_roc | perl -ple 's/[^\d.]+/ /g'`
#    echo "roc_n  >$roc_n<"; echo "numb.roc_n = $#roc_n"
     if ( $#roc_n != 2 ) then
       echo ""
       echo " Wrong decimals in roc names : $pre_roc"
       echo ""
       exit (2)
     endif

     set ro = `echo $pre_roc | perl -ple 's/\d+-\S+/ /g'`
     set jj = $roc_n[1]

     while ( $jj <= $roc_n[2] )
       set roc =  `echo "$ro$jj" `
       set ns_rr = `nslookup $roc | grep -i "can't"`
       if ( $#ns_rr > 0 ) then
         echo ""
         echo " Wrong roc name : $roc"
         echo ""
         exit (3)
       endif
       @ NN++
       set rocs = `echo "$rocs$ch$roc" `
       set crates = `echo "$crates$ch$roc$vme" `
#     echo "rocs    >$rocs<";   echo "rocs[$NN]  >$rocs[$NN]<"
#     echo "crates  >$crates<"; echo "crates[$NN]  >$crates[$NN]<"

       @ jj++
     end


#*** dash found, but single or in wrong place ***
   else
     echo ""
     echo " Wrong input string : $pre_roc"
     echo ""
     exit (4)
   endif

end   # of foreach pre_roc ($spstr)



#*** start reboot processes ***
set jj = 1
foreach roc ($rocs)
   set cmd   = `echo "snmpset -v 1 -c private $crates[$jj] enterprises.19947.1.1.1.0 i 0" `
echo $cmd
#  echo "... $roc node rebooting is in progress $crates[$jj] "
   echo "... $roc node rebooting is in progress"
   set stat = `ssh $hostname $cmd >& /dev/null & `
   @ jj++
end


echo "... wait 5 seconds to finish reboot processes"
sleep 5


#*** finish reboot processes ***
set jj = 1
foreach roc ($rocs)
   set cmd   = `echo "snmpset -v 1 -c private $crates[$jj] enterprises.19947.1.1.1.0 i 1" `
   set stat = `ssh $hostname $cmd >& /dev/null & `
   @ jj++
end


exit (0)
